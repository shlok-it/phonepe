{"version":3,"file":"web.js","sourceRoot":"","sources":["../../src/web.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,MAAM,iBAAiB,CAAC;AAI5C,MAAM,OAAO,UAAW,SAAQ,SAAS;IACvC,KAAK,CAAC,IAAI,CAAC,OAA4F;QACrG,OAAO,CAAC,GAAG,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC;QAC7B,OAAO,OAAO,CAAC;IACjB,CAAC;IACD,KAAK,CAAC,kBAAkB,CAAC,OAAuI;QAC9J,OAAO,CAAC,GAAG,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC;QAC7B,OAAO,OAAO,CAAC;IACjB,CAAC;IACD,KAAK,CAAC,yBAAyB,CAAC,OAA2G;QACzI,OAAO,CAAC,GAAG,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC;QAC7B,OAAO,OAAO,CAAC;IACjB,CAAC;IACD,KAAK,CAAC,kBAAkB;QACtB,MAAM,IAAI,KAAK,CAAC,yBAAyB,CAAC,CAAC;IAC7C,CAAC;IACD,KAAK,CAAC,gBAAgB;QACpB,MAAM,IAAI,KAAK,CAAC,yBAAyB,CAAC,CAAC;IAC7C,CAAC;IACD,KAAK,CAAC,eAAe;QACnB,MAAM,IAAI,KAAK,CAAC,yBAAyB,CAAC,CAAC;IAC7C,CAAC;IACD,KAAK,CAAC,6BAA6B;QACjC,MAAM,IAAI,KAAK,CAAC,yBAAyB,CAAC,CAAC;IAC7C,CAAC;IACD,KAAK,CAAC,oBAAoB;QACxB,MAAM,IAAI,KAAK,CAAC,yBAAyB,CAAC,CAAC;IAC7C,CAAC;CAEF","sourcesContent":["import { WebPlugin } from '@capacitor/core';\n\nimport type { PhonepePlugin } from './definitions';\n\nexport class PhonepeWeb extends WebPlugin implements PhonepePlugin {\n  async init(options: { environment: string; merchantId: string; appId: string; enableLogging: boolean; }): Promise<Record<string, any>> {\n    console.log('ECHO', options);\n    return options;\n  }\n  async startPGTransaction(options: { body: string; checksum: string; apiEndPoint: string; headers: any; packageName: string | null; callBackURL: string | null; }): Promise<Record<string, any>> {\n    console.log('ECHO', options);\n    return options;\n  }\n  async startContainerTransaction(options: { body: string; checksum: string; apiEndPoint: string; headers: any; callBackURL: string | null; }): Promise<Record<string, any>> {\n    console.log('ECHO', options);\n    return options;\n  }\n  async isPhonePeInstalled(): Promise<Record<string, boolean>> {\n    throw new Error('Method not implemented.');\n  }\n  async isPaytmInstalled(): Promise<Record<string, boolean>> {\n    throw new Error('Method not implemented.');\n  }\n  async isGpayInstalled(): Promise<Record<string, boolean>> {\n    throw new Error('Method not implemented.');\n  }\n  async getPackageSignatureForAndroid(): Promise<Record<string, string>> {\n    throw new Error('Method not implemented.');\n  }\n  async getUpiAppsForAndroid(): Promise<Record<string, string>> {\n    throw new Error('Method not implemented.');\n  }\n\n}\n"]}